/*
 * Tetris part A 
 * TCSS 305: Programming Practicum, Winter 2016
 */
package view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JComponent;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JSlider;
import javax.swing.KeyStroke;
import javax.swing.SwingConstants;

import com.sun.glass.events.KeyEvent;

import model.Board;

/**
 * This class create a menu bar for the game.
 * @author Trinh
 * @version 1222016
 */
public class TetrisMenu extends JMenuBar {
    
    /**
     * UID#.
     */
    private static final long serialVersionUID = 1L;
    
    /** A ToolKit. */
    private static final Toolkit KIT = Toolkit.getDefaultToolkit();
    
    /** The Dimension of the screen. */
    private static final Dimension SCREEN_SIZE = KIT.getScreenSize();
    
    /**
     * The control menu.
     */
    private JMenu myGameControl;
    
    /**
     * The help menu.
     */
    private JMenu myHelp;
    
    private JMenu myOption;
    
    private Board myBoard;
    
    private final TetrisGUI myGUI;
    
    private JMenuItem myNewGame;
    private JMenuItem myEndGame;
    
    private int myBoardWidth;
    private int myBoardHeight;
    
    private int myMaxBoardWidth;
    private int myMaxBoardHeight;
    
    /**
     * Constructor.
     */
    public TetrisMenu(final Board theBoard, final ScorePanel thePanel,
                      final TetrisGUI theGUI) {
        super();
        myBoard = theBoard;
        myGUI = theGUI;
        myGameControl = new JMenu("Game");
        myHelp = new JMenu("Help");
        myOption = new JMenu("Option");
        this.add(myGameControl);
        this.add(myHelp);
        this.add(myOption);
        setupHelpMenu();
        setupGameMenu();
        setupOptionMenu();
        myGameControl.addPropertyChangeListener(thePanel);
    }

    public JMenu getMyGameControl() {
        return myGameControl;
    }
    /**
     * Setup method.
     */
    public final void setupHelpMenu() {
        final String string = "Key Controls";
        final JMenuItem keyControl = new JMenuItem(string);
        keyControl.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(final ActionEvent theEvent) {
                JOptionPane.showMessageDialog(null, "MOVE LEFT: Left Arrow\n" 
                                     + "MOVE RIGHT: Right Arrow\n" + "ROTATE: Up Arrow\n"
                                     + "SOFT DROP: Down Arrow\n" 
                                     + "HARD DROP: Space bar",
                                     string, JOptionPane.INFORMATION_MESSAGE);
                
            }
            
        });
        myHelp.add(keyControl);
    } // end setupHelpMenu
    
    private void setupGameMenu() {
        
        myNewGame = new JMenuItem("New Game");
        myNewGame.setAccelerator(KeyStroke.getKeyStroke('N', java.awt.event.KeyEvent.CTRL_MASK));
        myNewGame.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent arg0) {
                myGUI.setTimerDelay();
                myGUI.startGame();
                myGameControl.firePropertyChange("new game", false, true);
                
            }
            
        });
        
        myEndGame = new JMenuItem("End Game");
        myEndGame.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent arg0) {
                myGUI.endGame();                
                JOptionPane.showMessageDialog(null, "GAME OVER");
            }
            
        });
        
        myGameControl.add(myNewGame);
        myGameControl.add(myEndGame);
    }
    
    private void getMaxTick() {
      
        myMaxBoardWidth = (int) SCREEN_SIZE.getWidth() / 2 /25;
        myMaxBoardHeight = (int) SCREEN_SIZE.getHeight() / 25; 
    }
    private void setupOptionMenu() {
        
        getMaxTick();
        final JRadioButtonMenuItem grid1 = new JRadioButtonMenuItem("10 x 20");
        final JRadioButtonMenuItem grid2 = new JRadioButtonMenuItem("20 x 20");
        final JRadioButtonMenuItem grid3 = new JRadioButtonMenuItem("15 x 30");
        
//        final JMenu boardWidth = new JMenu("Width grid");
//        final JSlider widthSlider = new JSlider(SwingConstants.HORIZONTAL, 0, myMaxBoardWidth, 10);
//        widthSlider.setMajorTickSpacing(5);
//        widthSlider.setPaintTicks(true);
//        boardWidth.add(widthSlider);
//        myOption.add(boardWidth);
//        
//        final JMenuItem boardHeight = new JMenuItem("Height grid");
//        myOption.add(boardHeight);        
    }
    
    public int getBoardWidth() {
        return myBoardWidth;
    }
    
    public int getBoardHeight() {
        return myBoardHeight;
    }
}
